plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-parcelize'
    id "androidx.navigation.safeargs"

    id 'com.google.gms.google-services'
    id "com.google.firebase.crashlytics"
}

android {
    compileSdk 34

    defaultConfig {
        applicationId "io.agora.flat"
        minSdkVersion 21
        targetSdk 34
        versionCode 58
        versionName "2.10.1"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        kapt {
            arguments {
                arg("room.schemaLocation", "$projectDir/schemas")
            }
        }
    }

    viewBinding {
        enabled = true
    }

    packagingOptions {
        pickFirst 'lib/x86/libaosl.so'
        pickFirst 'lib/x86_64/libaosl.so'
        pickFirst 'lib/armeabi-v7a/libaosl.so'
        pickFirst 'lib/arm64-v8a/libaosl.so'
    }

    signingConfigs {
        if (findProperty('signing.filepath')) {
            release {
                storeFile file(property('signing.filepath'))
                storePassword property('signing.storePassword')
                keyAlias property('signing.keyAlias')
                keyPassword property('signing.keyPassword')
            }

            debug {
                storeFile file(property('signing.filepath'))
                storePassword property('signing.storePassword')
                keyAlias property('signing.keyAlias')
                keyPassword property('signing.keyPassword')
            }
        } else {
            release {
                storeFile file("../flatrun.keystore")
                storePassword 'agoraflat'
                keyAlias 'flatrunkey'
                keyPassword 'agoraflat'
            }

            debug {
                storeFile file("../flatrun.keystore")
                storePassword 'agoraflat'
                keyAlias 'flatrunkey'
                keyPassword 'agoraflat'
            }
        }
    }

    buildFeatures {
        compose true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release

            ndk {
                abiFilters "arm64-v8a", "armeabi-v7a"
            }

            buildConfigField "String", "CHANNEL", "\"release\""
            buildConfigField "String", "ALIYUN_LOG_DEV_AK", "\"ALIYUN_LOG_DEV_AK_VALUE\""
            buildConfigField "String", "ALIYUN_LOG_DEV_SK", "\"ALIYUN_LOG_DEV_SK_VALUE\""
            buildConfigField "String", "ALIYUN_LOG_PROD_AK", "\"ALIYUN_LOG_PROD_AK_VALUE\""
            buildConfigField "String", "ALIYUN_LOG_PROD_SK", "\"ALIYUN_LOG_PROD_SK_VALUE\""

            buildConfigField "String", "ALIYUN_LOG_SG_PROD_AK", "\"ALIYUN_LOG_SG_PROD_AK_VALUE\""
            buildConfigField "String", "ALIYUN_LOG_SG_PROD_SK", "\"ALIYUN_LOG_SG_PROD_SK_VALUE\""
        }

        debug {
            minifyEnabled false
            signingConfig signingConfigs.debug

            buildConfigField "String", "CHANNEL", "\"debug\""
            buildConfigField "String", "ALIYUN_LOG_DEV_AK", "\"ALIYUN_LOG_DEV_AK_VALUE\""
            buildConfigField "String", "ALIYUN_LOG_DEV_SK", "\"ALIYUN_LOG_DEV_SK_VALUE\""
            buildConfigField "String", "ALIYUN_LOG_PROD_AK", "\"ALIYUN_LOG_PROD_AK_VALUE\""
            buildConfigField "String", "ALIYUN_LOG_PROD_SK", "\"ALIYUN_LOG_PROD_SK_VALUE\""

            buildConfigField "String", "ALIYUN_LOG_SG_PROD_AK", "\"ALIYUN_LOG_SG_PROD_AK_VALUE\""
            buildConfigField "String", "ALIYUN_LOG_SG_PROD_SK", "\"ALIYUN_LOG_SG_PROD_SK_VALUE\""
        }

        applicationVariants.all { variant ->
            variant.outputs.each { output ->
                def fileName = output.outputFileName

                def buildType = variant.buildType.name
                if (buildType == "debug") {
                    fileName = fileName.replaceFirst(/(\.\w+)$/) {
                        "-v${defaultConfig.versionName}-${new Date().format('MM-dd-HH')}${it[0]}"
                    }
                } else if (buildType == "release") {
                    fileName = fileName.replaceFirst(/(\.\w+)$/) {
                        "-v${defaultConfig.versionName}${it[0]}"
                    }
                }
                output.outputFileName = fileName
            }
        }
    }

    flavorDimensions "default"

    productFlavors {
        create("flat") {
            applicationId = "io.agora.flat"
            
            buildConfigField "String", "DEFAULT_CALLING_CODE", "\"+86\""
            buildConfigField "String", "DEFAULT_ENV", "\"cn_prod\""
        }

        create("flint") {
            applicationId = "io.agora.flint"

            buildConfigField "String", "DEFAULT_CALLING_CODE", "\"+01\""
            buildConfigField "String", "DEFAULT_ENV", "\"sg_prod\""
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    composeOptions {
        // change compose_version to the latest version of Compose in build.gradle(app)
        kotlinCompilerExtensionVersion "1.3.2"
    }

    lintOptions {
        // TODO
        abortOnError false
    }
}

dependencies {
    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$rootProject.kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.3'
    implementation 'androidx.camera:camera-camera2:1.1.0'
    implementation 'androidx.camera:camera-view:1.1.0'
    implementation 'androidx.camera:camera-lifecycle:1.1.0'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // androidx ktx
    implementation 'androidx.core:core-ktx:1.8.0'
    implementation "androidx.fragment:fragment-ktx:1.5.2"
    implementation 'androidx.activity:activity-ktx:1.5.1'

    // androidx ui
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.google.android.material:material:1.4.0'
    implementation "androidx.localbroadcastmanager:localbroadcastmanager:1.1.0"

    // Navigation library
    implementation "androidx.navigation:navigation-fragment-ktx:$rootProject.nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$rootProject.nav_version"

    // LifeCycle
    def lifecycle_version = "2.4.1"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    // Hilt
    implementation "com.google.dagger:hilt-android:$rootProject.hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$rootProject.hilt_version"
    kapt "androidx.hilt:hilt-compiler:1.0.0"
    // implementation 'androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha03'
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'

    // Paging
    def paging_version = "3.0.0"
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"

    // Room
    def room_version = "2.4.0-alpha03"
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // Concurrent library for asynchronous coroutines
    implementation 'androidx.concurrent:concurrent-futures-ktx:1.1.0'

    // Network
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation "com.squareup.okhttp3:logging-interceptor:4.10.0"
    implementation 'com.google.code.gson:gson:2.9.0'

    // Compose
    def compose_version = "1.3.0"
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.ui:ui-tooling:$compose_version"
    implementation "androidx.compose.foundation:foundation:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.material:material-icons-core:$compose_version"
    implementation "androidx.compose.material:material-icons-extended:$compose_version"
    implementation "androidx.compose.runtime:runtime-livedata:$compose_version"
    implementation "androidx.navigation:navigation-compose:2.5.0"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"

    implementation "androidx.constraintlayout:constraintlayout-compose:1.0.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:2.5.1"
    implementation 'androidx.activity:activity-compose:1.5.1'

    // Image Loader
    implementation "io.coil-kt:coil:1.4.0"
    implementation "io.coil-kt:coil-gif:1.4.0"

    implementation 'com.airbnb.android:lottie:5.2.0'

    // Google Accompanist (Compose Extensions)
    implementation 'com.google.accompanist:accompanist-systemuicontroller:0.12.0'
    implementation "com.google.accompanist:accompanist-insets:0.16.1"
    implementation "com.google.accompanist:accompanist-pager:0.16.1"
    implementation "com.google.accompanist:accompanist-pager-indicators:0.16.1"
    implementation "com.google.accompanist:accompanist-swiperefresh:0.16.1"
    implementation 'com.google.accompanist:accompanist-coil:0.15.0'
    implementation "com.google.accompanist:accompanist-navigation-animation:0.23.0"
    implementation "com.google.accompanist:accompanist-permissions:0.16.1"

    // Tencent
    api 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:6.8.0'

    // Agora
    implementation("com.github.netless-io:whiteboard-android:nl_2.17.0-alpha.14") {
        force true
    }
    // for local fastboard debug
    if (findProject(":fastboard") != null) {
        implementation project(':fastboard')
    } else {
        implementation 'com.github.netless-io:fastboard-android:nl_2.0.0-alpha.5'
    }
    // for local syncplayer debug
    if (findProject(":syncplayer") != null) {
        implementation project(':syncplayer')
    } else {
        implementation "com.github.netless-io:sync-player-android:1.2.1"
    }

    implementation 'io.agora.rtc:full-sdk:4.3.0'
    implementation 'io.agora:agora-rtm:2.2.0'

    // Exoplayer
    def exoplayer_version = "2.14.1"
    implementation "com.google.android.exoplayer:exoplayer-core:$exoplayer_version"
    implementation "com.google.android.exoplayer:exoplayer-hls:$exoplayer_version"
    implementation "com.google.android.exoplayer:exoplayer-ui:$exoplayer_version"

    implementation project(":base")
    implementation project(":logger")

    // WindowManager
    implementation "androidx.window:window:1.0.0"
    implementation "androidx.exifinterface:exifinterface:1.3.6"

    flintImplementation platform('com.google.firebase:firebase-bom:31.5.0')
    flintImplementation("com.google.firebase:firebase-analytics-ktx")
    flintImplementation("com.google.firebase:firebase-crashlytics-ktx")
}